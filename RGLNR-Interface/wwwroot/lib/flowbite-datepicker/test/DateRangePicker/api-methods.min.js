/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/DateRangePicker/api-methods.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("DateRangePicker - API methods",(function(){let e,t,a,l;before((function(){e=sinon.useFakeTimers({now:new Date(2020,1,14)})})),after((function(){e.restore()})),beforeEach((function(){t=domUtils.parseHTML("<div><input><input></div>").firstChild,[a,l]=t.children,testContainer.appendChild(t)})),afterEach((function(){testContainer.removeChild(t)})),describe("getDates()",(function(){it("returns an array of the Date objects of selected dates",(function(){a.value="04/20/2020",l.value="04/22/2020";const e=new DateRangePicker(t);expect(e.getDates(),"to equal",[new Date(dateValue(2020,3,20)),new Date(dateValue(2020,3,22))]),e.destroy(),a.value="",l.value=""})),it("returns a formatted date stirngs of selected dates if the format is specified",(function(){a.value="04/20/2020",l.value="04/22/2020";const e=new DateRangePicker(t);expect(e.getDates("yyyy-mm-dd"),"to equal",["2020-04-20","2020-04-22"]),expect(e.getDates("d M, yy"),"to equal",["20 Apr, 20","22 Apr, 20"]),e.destroy(),a.value="",l.value=""})),it("uses undefined instead of Date object if date is not selected",(function(){const e=new DateRangePicker(t);expect(e.getDates(),"to equal",[void 0,void 0]),expect(e.getDates("yyyy-mm-dd"),"to equal",[void 0,void 0]),e.destroy()}))})),describe("setDates()",(function(){let e,c,s,o,d,u,r;it("changes the selected dates to given dates",(function(){({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates("2/11/2020","2/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,11)]),expect(a.value,"to be","02/11/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[16]),expect(getCellIndices(u,".range-start"),"to equal",[16]),expect(getCellIndices(u,".range-end"),"to equal",[19]),expect(getCellIndices(u,".range"),"to equal",[17,18]),expect(getCellIndices(u,".focused"),"to equal",[16]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,1,14)]),expect(l.value,"to be","02/14/2020"),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[19]),expect(getCellIndices(r,".range-start"),"to equal",[16]),expect(getCellIndices(r,".range-end"),"to equal",[19]),expect(getCellIndices(r,".range"),"to equal",[17,18]),expect(getCellIndices(r,".focused"),"to equal",[19]),e.setDates(new Date(2020,4,31),new Date(2020,6,5).getTime()),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,4,31)]),expect(a.value,"to be","05/31/2020"),expect(o.textContent,"to be","May 2020"),expect(getCellIndices(u,".selected"),"to equal",[35]),expect(getCellIndices(u,".range-start"),"to equal",[35]),expect(getCellIndices(u,".range-end"),"to equal",[]),expect(getCellIndices(u,".range"),"to equal",[36,37,38,39,40,41]),expect(getCellIndices(u,".focused"),"to equal",[35]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,6,5)]),expect(l.value,"to be","07/05/2020"),expect(d.textContent,"to be","July 2020"),expect(getCellIndices(r,".selected"),"to equal",[7]),expect(getCellIndices(r,".range-start"),"to equal",[]),expect(getCellIndices(r,".range-end"),"to equal",[7]),expect(getCellIndices(r,".range"),"to equal",[0,1,2,3,4,5,6]),expect(getCellIndices(r,".focused"),"to equal",[7]),e.destroy(),a.value="",l.value=""})),it("swapps star↔︎end dates if given start date > end date",(function(){({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates(new Date(2020,6,5).getTime(),new Date(2020,4,31)),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,4,31)]),expect(a.value,"to be","05/31/2020"),expect(o.textContent,"to be","May 2020"),expect(getCellIndices(u,".selected"),"to equal",[35]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,6,5)]),expect(l.value,"to be","07/05/2020"),expect(d.textContent,"to be","July 2020"),expect(getCellIndices(r,".selected"),"to equal",[7]),e.destroy(),a.value="",l.value=""})),it("ignores invalid dates and the same date as the current one and leaves that side untouched",(function(){let i,n,p;a.value="02/11/2020",l.value="02/14/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates("","3/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,11)]),expect(a.value,"to be","02/11/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[16]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,2,14)]),expect(l.value,"to be","03/14/2020"),expect(d.textContent,"to be","March 2020"),expect(getCellIndices(r,".selected"),"to equal",[13]),1===new Date(0).getDate()?(i="01/01/1970",n="January 1970",p=[4]):(i="12/31/1969",n="December 1969",p=[31]),e.setDates(0,new Date(-1,11,31)),expect(e.datepickers[0].dates,"to equal",[dateValue(0)]),expect(a.value,"to be",i),expect(o.textContent,"to be",n),expect(getCellIndices(u,".selected"),"to equal",p),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,2,14)]),expect(l.value,"to be","03/14/2020"),expect(d.textContent,"to be","March 2020"),expect(getCellIndices(r,".selected"),"to equal",[13]),l.value="foo",e.setDates("2/11/2020","3/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,11)]),expect(a.value,"to be","02/11/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[16]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,2,14)]),expect(l.value,"to be","03/14/2020"),expect(d.textContent,"to be","March 2020"),expect(getCellIndices(r,".selected"),"to equal",[13]),a.value="foo",e.setDates("2/11/2020","2/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,11)]),expect(a.value,"to be","02/11/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[16]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,1,14)]),expect(l.value,"to be","02/14/2020"),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[19]),e.destroy(),a.value="",l.value=""})),it("sets the same date to both sides if called with one side only when range is not selected",(function(){({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates("2/11/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,11)]),expect(a.value,"to be","02/11/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[16]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,1,11)]),expect(l.value,"to be","02/11/2020"),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[16]),e.destroy(),a.value="",l.value="",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates(void 0,"3/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,2,14)]),expect(a.value,"to be","03/14/2020"),expect(o.textContent,"to be","March 2020"),expect(getCellIndices(u,".selected"),"to equal",[13]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,2,14)]),expect(l.value,"to be","03/14/2020"),expect(d.textContent,"to be","March 2020"),expect(getCellIndices(r,".selected"),"to equal",[13]),e.destroy(),a.value="",l.value=""})),it("clears both sides if {clear: true} is passed as the last effective argument instrad of a date",(function(){a.value="02/11/2020",l.value="02/14/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates({clear:!0}),expect(e.datepickers[0].dates,"to equal",[]),expect(a.value,"to be",""),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[]),expect(e.datepickers[1].dates,"to equal",[]),expect(l.value,"to be",""),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[]),e.destroy(),a.value="02/11/2020",l.value="02/14/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates({clear:!0},"2/14/2020"),expect(e.datepickers[0].dates,"to equal",[]),expect(a.value,"to be",""),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[]),expect(e.datepickers[1].dates,"to equal",[]),expect(l.value,"to be",""),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[]),e.destroy(),a.value="02/11/2020",l.value="02/14/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates("4/20/2020",{clear:!0}),expect(e.datepickers[0].dates,"to equal",[]),expect(a.value,"to be",""),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[]),expect(e.datepickers[1].dates,"to equal",[]),expect(l.value,"to be",""),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[]),e.destroy(),a.value="02/11/2020",l.value="02/14/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates("2/11/2020",{clear:!0}),expect(e.datepickers[0].dates,"to equal",[]),expect(a.value,"to be",""),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[]),expect(e.datepickers[1].dates,"to equal",[]),expect(l.value,"to be",""),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[]),e.destroy()})),it("sets the end date to both sides if {clear: true} is passed to start and an eefective date to end",(function(){a.value="02/11/2020",l.value="02/11/2020",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates({clear:!0},"2/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,1,14)]),expect(a.value,"to be","02/14/2020"),expect(o.textContent,"to be","February 2020"),expect(getCellIndices(u,".selected"),"to equal",[19]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,1,14)]),expect(l.value,"to be","02/14/2020"),expect(d.textContent,"to be","February 2020"),expect(getCellIndices(r,".selected"),"to equal",[19]),e.destroy(),a.value="",l.value="",({drp:e,picker0:c,picker1:s}=createDRP(t)),o=c.querySelector(".view-switch"),d=s.querySelector(".view-switch"),u=getCells(c),r=getCells(s),e.setDates({clear:!0},"3/14/2020"),expect(e.datepickers[0].dates,"to equal",[dateValue(2020,2,14)]),expect(a.value,"to be","03/14/2020"),expect(o.textContent,"to be","March 2020"),expect(getCellIndices(u,".selected"),"to equal",[13]),expect(e.datepickers[1].dates,"to equal",[dateValue(2020,2,14)]),expect(l.value,"to be","03/14/2020"),expect(d.textContent,"to be","March 2020"),expect(getCellIndices(r,".selected"),"to equal",[13]),e.destroy(),a.value="",l.value=""}))}))}));
//# sourceMappingURL=/sm/02c62e1bc8e741f7b128a6a31eecfcc6205b6061914030d05005c2b64a2e85ab.map