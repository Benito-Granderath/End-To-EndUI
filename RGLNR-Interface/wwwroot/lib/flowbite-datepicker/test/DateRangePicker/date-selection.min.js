/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/DateRangePicker/date-selection.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("DateRangePicker - date selection",(function(){let e,t,l,a,c,r,s,o,i,u,p,n,x;before((function(){e=sinon.useFakeTimers({now:new Date(2020,1,14)})})),after((function(){e.restore()})),beforeEach((function(){t=domUtils.parseHTML("<div><input><input></div>").firstChild,[l,a]=t.children,testContainer.appendChild(t)})),afterEach((function(){testContainer.removeChild(t)})),it("same date is set to both sides if a date is selected on one side when selections are none",(function(){let e=dateValue(2020,1,11);({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),c.datepickers[0].show(),n[16].click(),expect(c.dates,"to equal",[e,e]),expect(l.value,"to be","02/11/2020"),expect(filterCells(n,".selected"),"to equal",[n[16]]),expect(filterCells(n,".range-start"),"to equal",[n[16]]),expect(filterCells(n,".range-end"),"to equal",[n[16]]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[16]]),expect(a.value,"to be","02/11/2020"),expect(filterCells(x,".selected"),"to equal",[x[16]]),expect(filterCells(x,".range-start"),"to equal",[x[16]]),expect(filterCells(x,".range-end"),"to equal",[x[16]]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[16]]),c.destroy(),l.value="",a.value="",({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),c.datepickers[1].show(),x[16].click(),expect(c.dates,"to equal",[e,e]),expect(l.value,"to be","02/11/2020"),expect(filterCells(n,".selected"),"to equal",[n[16]]),expect(filterCells(n,".range-start"),"to equal",[n[16]]),expect(filterCells(n,".range-end"),"to equal",[n[16]]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[16]]),expect(a.value,"to be","02/11/2020"),expect(filterCells(x,".selected"),"to equal",[x[16]]),expect(filterCells(x,".range-start"),"to equal",[x[16]]),expect(filterCells(x,".range-end"),"to equal",[x[16]]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[16]]),c.destroy(),l.value="",a.value="";let d=[".view-switch",".next-btn"];e=dateValue(2020,2,10),({drp:c,picker0:r,picker1:s}=createDRP(t)),[o,u]=getParts(r,d),[i,p]=getParts(s,d),c.datepickers[0].show(),u.click(),getCells(r)[9].click(),n=getCells(r),x=getCells(s),expect(c.dates,"to equal",[e,e]),expect(l.value,"to be","03/10/2020"),expect(o.textContent,"to equal","March 2020"),expect(filterCells(n,".selected"),"to equal",[n[9]]),expect(filterCells(n,".range-start"),"to equal",[n[9]]),expect(filterCells(n,".range-end"),"to equal",[n[9]]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[9]]),expect(a.value,"to be","03/10/2020"),expect(i.textContent,"to equal","March 2020"),expect(filterCells(x,".selected"),"to equal",[x[9]]),expect(filterCells(x,".range-start"),"to equal",[x[9]]),expect(filterCells(x,".range-end"),"to equal",[x[9]]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[9]]),c.datepickers[1].show(),p.click(),expect(i.textContent,"to equal","April 2020"),c.destroy(),l.value="",a.value="",({drp:c,picker0:r,picker1:s}=createDRP(t)),[o,u]=getParts(r,d),[i,p]=getParts(s,d),c.datepickers[1].show(),p.click(),getCells(s)[9].click(),n=getCells(r),x=getCells(s),expect(c.dates,"to equal",[e,e]),expect(l.value,"to be","03/10/2020"),expect(o.textContent,"to equal","March 2020"),expect(filterCells(n,".selected"),"to equal",[n[9]]),expect(filterCells(n,".range-start"),"to equal",[n[9]]),expect(filterCells(n,".range-end"),"to equal",[n[9]]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[9]]),expect(a.value,"to be","03/10/2020"),expect(i.textContent,"to equal","March 2020"),expect(filterCells(x,".selected"),"to equal",[x[9]]),expect(filterCells(x,".range-start"),"to equal",[x[9]]),expect(filterCells(x,".range-end"),"to equal",[x[9]]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[9]]),c.datepickers[0].show(),u.click(),expect(o.textContent,"to equal","April 2020"),c.destroy(),l.value="",a.value=""})),it("selections are cleared from both sides if selected date on one side is cleared",(function(){l.value="02/11/2020",a.value="02/11/2020",({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),l.value="",simulant.fire(l,"keydown",{key:"Enter"}),expect(c.dates,"to equal",[void 0,void 0]),expect(l.value,"to be",""),expect(filterCells(n,".selected"),"to equal",[]),expect(filterCells(n,".range-start"),"to equal",[]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[19]]),expect(a.value,"to be",""),expect(filterCells(x,".selected"),"to equal",[]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[19]]),c.destroy(),l.value="02/11/2020",a.value="02/11/2020",({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),a.value="",simulant.fire(a,"keydown",{key:"Enter"}),expect(c.dates,"to equal",[void 0,void 0]),expect(l.value,"to be",""),expect(filterCells(n,".selected"),"to equal",[]),expect(filterCells(n,".range-start"),"to equal",[]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",[]),expect(filterCells(n,".focused"),"to equal",[n[19]]),expect(a.value,"to be",""),expect(filterCells(x,".selected"),"to equal",[]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[]),expect(filterCells(x,".range"),"to equal",[]),expect(filterCells(x,".focused"),"to equal",[x[19]]),c.destroy()})),it("dates are swapped if a date later than the 2nd picker's selection is seleted on the 1st picker",(function(){l.value="02/11/2020",a.value="02/11/2020",({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),c.datepickers[0].show(),n[20].click(),expect(c.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,15)]),expect(l.value,"to be","02/11/2020"),expect(filterCells(n,".selected"),"to equal",[n[16]]),expect(filterCells(n,".range-start"),"to equal",[n[16]]),expect(filterCells(n,".range-end"),"to equal",[n[20]]),expect(filterCells(n,".range"),"to equal",[n[17],n[18],n[19]]),expect(filterCells(n,".focused"),"to equal",[n[16]]),expect(a.value,"to be","02/15/2020"),expect(filterCells(x,".selected"),"to equal",[x[20]]),expect(filterCells(x,".range-start"),"to equal",[x[16]]),expect(filterCells(x,".range-end"),"to equal",[x[20]]),expect(filterCells(x,".range"),"to equal",[x[17],x[18],x[19]]),expect(filterCells(x,".focused"),"to equal",[x[20]]),c.destroy(),l.value="",a.value=""})),it("dates are swapped if a date earlier than the 1st picker's selection is seleted on the 2nd picker",(function(){l.value="02/11/2020",a.value="02/11/2020",({drp:c,picker0:r,picker1:s}=createDRP(t)),n=getCells(r),x=getCells(s),c.datepickers[1].show(),x[12].click(),expect(c.dates,"to equal",[dateValue(2020,1,7),dateValue(2020,1,11)]),expect(l.value,"to be","02/07/2020"),expect(filterCells(n,".selected"),"to equal",[n[12]]),expect(filterCells(n,".range-start"),"to equal",[n[12]]),expect(filterCells(n,".range-end"),"to equal",[n[16]]),expect(filterCells(n,".range"),"to equal",[n[13],n[14],n[15]]),expect(filterCells(n,".focused"),"to equal",[n[12]]),expect(a.value,"to be","02/11/2020"),expect(filterCells(x,".selected"),"to equal",[x[16]]),expect(filterCells(x,".range-start"),"to equal",[x[12]]),expect(filterCells(x,".range-end"),"to equal",[x[16]]),expect(filterCells(x,".range"),"to equal",[x[13],x[14],x[15]]),expect(filterCells(x,".focused"),"to equal",[x[16]]),c.destroy(),l.value="",a.value=""})),describe("range between different months",(function(){it("each picker displays the month of corresponding end of the range",(function(){l.value="02/25/2020",a.value="03/05/2020",({drp:c,picker0:r,picker1:s}=createDRP(t)),o=r.querySelector(".view-switch"),i=s.querySelector(".view-switch"),n=getCells(r),x=getCells(s),expect(o.textContent,"to be","February 2020"),expect(filterCells(n,".selected"),"to equal",[n[30]]),expect(filterCells(n,".range-start"),"to equal",[n[30]]),expect(filterCells(n,".range-end"),"to equal",[n[39]]),expect(filterCells(n,".range"),"to equal",n.slice(31,39)),expect(i.textContent,"to be","March 2020"),expect(filterCells(x,".selected"),"to equal",[x[4]]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[x[4]]),expect(filterCells(x,".range"),"to equal",x.slice(0,4)),c.datepickers[1].show(),s.querySelector(".next-btn").click(),x=getCells(s),x[24].click(),expect(c.dates,"to equal",[dateValue(2020,1,25),dateValue(2020,3,22)]),expect(l.value,"to be","02/25/2020"),expect(a.value,"to be","04/22/2020"),expect(o.textContent,"to be","February 2020"),expect(filterCells(n,".selected"),"to equal",[n[30]]),expect(filterCells(n,".range-start"),"to equal",[n[30]]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",n.slice(31)),expect(i.textContent,"to be","April 2020"),expect(filterCells(x,".selected"),"to equal",[x[24]]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[x[24]]),expect(filterCells(x,".range"),"to equal",x.slice(0,24)),l.value="02/14/1998",simulant.fire(l,"keydown",{key:"Enter"}),n=getCells(r),expect(c.dates,"to equal",[dateValue(1998,1,14),dateValue(2020,3,22)]),expect(l.value,"to be","02/14/1998"),expect(a.value,"to be","04/22/2020"),expect(o.textContent,"to be","February 1998"),expect(filterCells(n,".selected"),"to equal",[n[13]]),expect(filterCells(n,".range-start"),"to equal",[n[13]]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",n.slice(14)),expect(i.textContent,"to be","April 2020"),expect(filterCells(x,".selected"),"to equal",[x[24]]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[x[24]]),expect(filterCells(x,".range"),"to equal",x.slice(0,24)),c.datepickers[0].show(),o.click(),n=getCells(r),expect(o.textContent,"to be","1998"),expect(filterCells(n,".selected"),"to equal",[n[1]]),i.click(),x=getCells(s),expect(i.textContent,"to be","2020"),expect(filterCells(x,".selected"),"to equal",[x[3]]),o.click(),n=getCells(r),expect(o.textContent,"to be","1990-1999"),expect(filterCells(n,".selected"),"to equal",[n[9]]),i.click(),x=getCells(s),expect(i.textContent,"to be","2020-2029"),expect(filterCells(x,".selected"),"to equal",[x[1]]),o.click(),n=getCells(r),expect(o.textContent,"to be","1900-1990"),expect(filterCells(n,".selected"),"to equal",[n[10]]),i.click(),x=getCells(s),expect(i.textContent,"to be","2000-2090"),expect(filterCells(x,".selected"),"to equal",[x[3]]),c.destroy(),l.value="",a.value=""})),it("dates are swapped if a date later than the 2nd picker's selection is seleted on the 1st picker",(function(){({drp:c,picker0:r,picker1:s}=createDRP(t)),[o,u]=getParts(r,[".view-switch",".next-btn"]),i=s.querySelector(".view-switch"),c.datepickers[1].show(),getCells(s)[16].click(),c.datepickers[1].hide(),c.datepickers[0].show(),expect(o.textContent,"to equal","February 2020"),u.click(),expect(o.textContent,"to equal","March 2020"),getCells(r)[9].click(),n=getCells(r),x=getCells(s),expect(c.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,2,10)]),expect(l.value,"to be","02/11/2020"),expect(o.textContent,"to equal","February 2020"),expect(filterCells(n,".selected"),"to equal",[n[16]]),expect(filterCells(n,".range-start"),"to equal",[n[16]]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",n.slice(17)),expect(filterCells(n,".focused"),"to equal",[n[16]]),expect(a.value,"to be","03/10/2020"),expect(i.textContent,"to equal","March 2020"),expect(filterCells(x,".selected"),"to equal",[x[9]]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[x[9]]),expect(filterCells(x,".range"),"to equal",x.slice(0,9)),expect(filterCells(x,".focused"),"to equal",[x[9]]),c.destroy(),l.value="",a.value=""})),it("dates are swapped if a date earlier than the 1st picker's selection is seleted on the 2nd picker",(function(){let e;({drp:c,picker0:r,picker1:s}=createDRP(t)),[o,u]=getParts(r,[".view-switch",".next-btn"]),[i,e]=getParts(s,[".view-switch",".prev-btn"]),c.datepickers[0].show(),u.click(),getCells(r)[9].click(),c.datepickers[0].hide(),c.datepickers[1].show(),expect(i.textContent,"to equal","March 2020"),e.click(),expect(i.textContent,"to equal","February 2020"),getCells(s)[16].click(),n=getCells(r),x=getCells(s),expect(c.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,2,10)]),expect(l.value,"to be","02/11/2020"),expect(o.textContent,"to equal","February 2020"),expect(filterCells(n,".selected"),"to equal",[n[16]]),expect(filterCells(n,".range-start"),"to equal",[n[16]]),expect(filterCells(n,".range-end"),"to equal",[]),expect(filterCells(n,".range"),"to equal",n.slice(17)),expect(filterCells(n,".focused"),"to equal",[n[16]]),expect(a.value,"to be","03/10/2020"),expect(i.textContent,"to equal","March 2020"),expect(filterCells(x,".selected"),"to equal",[x[9]]),expect(filterCells(x,".range-start"),"to equal",[]),expect(filterCells(x,".range-end"),"to equal",[x[9]]),expect(filterCells(x,".range"),"to equal",x.slice(0,9)),expect(filterCells(x,".focused"),"to equal",[x[9]]),c.destroy(),l.value="",a.value=""}))}))}));
//# sourceMappingURL=/sm/55fa8652e4f0be56d112299a93d1d7763ce22bca9cb2383c82ca619318d7c00c.map