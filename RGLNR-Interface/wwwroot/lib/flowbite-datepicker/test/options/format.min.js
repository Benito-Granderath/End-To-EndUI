/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/options/format.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("options - format & language",(function(){let e,t;beforeEach((function(){e=sinon.useFakeTimers({now:new Date(2020,1,14)}),t=document.createElement("input"),testContainer.appendChild(t)})),afterEach((function(){testContainer.removeChild(t),e.restore()})),describe("format",(function(){it("specifies the date format used to parse/format the date string in input",(function(){const e=new Datepicker(t,{format:"yyyy-mm-dd"});e.setDate(new Date(2020,1,14)),expect(e.dates,"to equal",[dateValue(2020,1,14)]),expect(t.value,"to be","2020-02-14"),t.value="2020/4/22",e.update(),expect(e.dates,"to equal",[dateValue(2020,3,22)]),expect(t.value,"to be","2020-04-22"),e.setDate("2/14/2020"),expect(e.dates,"to equal",[dateValue(2,13,2020)]),expect(t.value,"to be","0008-08-12"),t.value="22/4/2020",e.update(),expect(e.dates,"to equal",[dateValue(22,3,2020)]),expect(t.value,"to be","0027-10-11"),e.destroy(),t.value=""})),it("custom parser/fomatter can be used by providing them as toValue/toDisplay of an object",(function(){const e=new Datepicker(t,{format:{toDisplay:e=>new Date(e.getTime()-6e4*e.getTimezoneOffset()).toISOString().slice(0,10).replace(/-/g,""),toValue(e){const t=[parseInt(e.slice(0,4),10),parseInt(e.slice(4,6),10)-1,parseInt(e.slice(6,8),10)];return dateValue(...t)}}});e.setDate(new Date(2020,1,14)),expect(e.dates,"to equal",[dateValue(2020,1,14)]),expect(t.value,"to be","20200214"),t.value="20200422",e.update(),expect(e.dates,"to equal",[dateValue(2020,3,22)]),expect(t.value,"to be","20200422"),e.destroy(),t.value=""})),it("can be updated with setOptions()",(function(){const e=new Datepicker(t);e.setOptions({format:"d M, 'yy"}),e.setDate("14/2/2020"),expect(e.dates,"to equal",[dateValue(2020,1,14)]),expect(t.value,"to be","14 Feb, '20"),e.setOptions({format:"mm/dd/yyyy"}),expect(t.value,"to be","02/14/2020"),t.value="4/22/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,3,22)]),expect(t.value,"to be","04/22/2020"),e.destroy(),t.value=""}))})),describe("language",(function(){const e=e=>Array.from(e.querySelectorAll(".dow")).map((e=>e.textContent));it("specifies the language used for the month/day names, today/clear buttons and the default format/weekStart",(function(){const a=Datepicker.locales["zh-CN"],{dp:o,picker:l}=createDP(t,{language:"zh-CN",todayBtn:!0,clearBtn:!0}),c=getViewSwitch(l);o.setDate(new Date(2020,1,14)),o.show(),expect(c.textContent,"to be","2020年02月"),expect(t.value,"to be","2020-02-14"),expect(l.querySelector(".today-btn").textContent,"to be",a.today),expect(l.querySelector(".clear-btn").textContent,"to be",a.clear);const n=a.daysMin.slice(1);n.push(a.daysMin[0]),expect(e(l),"to equal",n);let s=getCells(l);expect(s[0].textContent,"to be","27"),expect(s[5].textContent,"to be","1"),expect(s[33].textContent,"to be","29"),expect(s[41].textContent,"to be","8"),expect(filterCells(s,".selected"),"to equal",[s[18]]),expect(filterCells(s,".focused"),"to equal",[s[18]]),expect(s[18].textContent,"to be","14"),c.click(),expect(c.textContent,"to be","2020"),s=getCells(l),expect(Array.from(s).map((e=>e.textContent)),"to equal",a.monthsShort),s[1].click(),t.value="2020-4-22",o.update(),expect(c.textContent,"to be","2020年04月"),expect(t.value,"to be","2020-04-22"),s=getCells(l),expect(filterCells(s,".selected"),"to equal",[s[23]]),expect(filterCells(s,".focused"),"to equal",[s[23]]),expect(s[23].textContent,"to be","22"),o.destroy(),t.value=""})),it("default format/weekStart in the locale are overriden by user-specified ones",(function(){const a=Datepicker.locales["zh-CN"],{dp:o,picker:l}=createDP(t,{language:"zh-CN",format:"yyyy年mm月dd日",weekStart:0}),c=getViewSwitch(l);o.setDate(new Date(2020,1,14)),o.show(),expect(c.textContent,"to be","2020年02月"),expect(t.value,"to be","2020年02月14日"),expect(e(l),"to equal",a.daysMin);let n=getCells(l);expect(filterCells(n,".selected"),"to equal",[n[19]]),expect(filterCells(n,".focused"),"to equal",[n[19]]),expect(n[19].textContent,"to be","14"),o.destroy(),t.value=""})),it("language code + tag not installed falls back to the language code without tag",(function(){const a=Datepicker.locales.fr,{dp:o,picker:l}=createDP(t,{language:"fr-CA",todayBtn:!0,clearBtn:!0}),c=getViewSwitch(l);o.setDate(new Date(2020,1,14)),o.show(),expect(c.textContent,"to be","février 2020"),expect(t.value,"to be","14/02/2020"),expect(l.querySelector(".today-btn").textContent,"to be",a.today),expect(l.querySelector(".clear-btn").textContent,"to be",a.clear);const n=a.daysMin.slice(1);n.push(a.daysMin[0]),expect(e(l),"to equal",n),o.destroy(),t.value=""})),it('language code not installed falls back to "en"',(function(){const a=Datepicker.locales.en,{dp:o,picker:l}=createDP(t,{language:"it",todayBtn:!0,clearBtn:!0}),c=getViewSwitch(l);o.setDate(new Date(2020,1,14)),o.show(),expect(c.textContent,"to be","February 2020"),expect(t.value,"to be","02/14/2020"),expect(l.querySelector(".today-btn").textContent,"to be",a.today),expect(l.querySelector(".clear-btn").textContent,"to be",a.clear),expect(e(l),"to equal",a.daysMin),o.destroy(),t.value=""})),it("can be updated with setOptions()",(function(){const{dp:a,picker:o}=createDP(t,{todayBtn:!0,clearBtn:!0}),l=getViewSwitch(o);let c=Datepicker.locales["zh-CN"];a.setDate(new Date(2020,1,14)),a.setOptions({language:"zh-CN"}),a.show(),expect(l.textContent,"to be","2020年02月"),expect(t.value,"to be","2020-02-14"),expect(o.querySelector(".today-btn").textContent,"to be",c.today),expect(o.querySelector(".clear-btn").textContent,"to be",c.clear);let n=c.daysMin.slice(1);n.push(c.daysMin[0]),expect(e(o),"to equal",n);let s=getCells(o);expect(filterCells(s,".selected"),"to equal",[s[18]]),expect(filterCells(s,".focused"),"to equal",[s[18]]),expect(s[18].textContent,"to be","14"),c=Datepicker.locales.fr,a.setOptions({language:"fr"}),expect(l.textContent,"to be","février 2020"),expect(t.value,"to be","14/02/2020"),expect(o.querySelector(".today-btn").textContent,"to be",c.today),expect(o.querySelector(".clear-btn").textContent,"to be",c.clear),n=c.daysMin.slice(1),n.push(c.daysMin[0]),expect(e(o),"to equal",n),s=getCells(o),expect(filterCells(s,".selected"),"to equal",[s[18]]),expect(filterCells(s,".focused"),"to equal",[s[18]]),expect(s[18].textContent,"to be","14"),c=Datepicker.locales.en,a.setOptions({language:"en"}),expect(l.textContent,"to be","February 2020"),expect(t.value,"to be","02/14/2020"),expect(o.querySelector(".today-btn").textContent,"to be",c.today),expect(o.querySelector(".clear-btn").textContent,"to be",c.clear),expect(e(o),"to equal",c.daysMin),s=getCells(o),expect(filterCells(s,".selected"),"to equal",[s[19]]),expect(filterCells(s,".focused"),"to equal",[s[19]]),expect(s[19].textContent,"to be","14"),a.destroy(),t.value=""})),it("user-specified format/weekStart other than old language's default are kept on being updated dynamically",(function(){const{dp:a,picker:o}=createDP(t,{language:"zh-CN",format:"yyyy/mm/dd",weekStart:0});a.setDate(new Date(2020,1,14)),a.show();let l=Datepicker.locales.fr;a.setOptions({language:"fr"}),expect(t.value,"to be","2020/02/14"),expect(e(o),"to equal",l.daysMin);let c=getCells(o);expect(filterCells(c,".selected"),"to equal",[c[19]]),expect(filterCells(c,".focused"),"to equal",[c[19]]),expect(c[19].textContent,"to be","14"),a.destroy(),t.value=""}))}))}));
//# sourceMappingURL=/sm/5fc8099055fb72ce2578c25f33d8b262a25d1bd782f47717998dd5a0ea14401e.map