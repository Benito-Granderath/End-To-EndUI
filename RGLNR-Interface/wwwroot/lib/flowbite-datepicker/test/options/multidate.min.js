/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/options/multidate.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("options - multi date",(function(){let e,t;beforeEach((function(){e=sinon.useFakeTimers({now:new Date(2020,1,14)}),t=document.createElement("input"),testContainer.appendChild(t)})),afterEach((function(){testContainer.removeChild(t),e.restore()})),describe("maxNumberOfDates",(function(){it("specifies the muximum number of dates the datepicker accepts for the selection",(function(){let{dp:e,picker:a}=createDP(t,{maxNumberOfDates:2});e.setDate("2/14/2020","4/22/2020"),expect(e.dates,"to equal",[dateValue(2020,1,14),dateValue(2020,3,22)]),expect(t.value,"to be","02/14/2020,04/22/2020"),e.setDate("1/4/2020","2/22/2020","3/21/2020"),expect(e.dates,"to equal",[dateValue(2020,1,22),dateValue(2020,2,21)]),expect(t.value,"to be","02/22/2020,03/21/2020"),e.setDate("4/22/2020","7/14/2020","5/5/2020","7/14/2020"),expect(e.dates,"to equal",[dateValue(2020,6,14),dateValue(2020,4,5)]),expect(t.value,"to be","07/14/2020,05/05/2020"),e.destroy(),t.value="",({dp:e,picker:a}=createDP(t,{maxNumberOfDates:3})),e.show();let l=getCells(a);l[19].click(),l[9].click(),expect(e.dates,"to equal",[dateValue(2020,1,14),dateValue(2020,1,4)]),expect(t.value,"to be","02/14/2020,02/04/2020"),expect(filterCells(l,".selected"),"to equal",[l[19],l[9]]),expect(filterCells(l,".focused"),"to equal",[l[9]]),t.value="2/3/2020,2/22/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,1,3),dateValue(2020,1,22)]),expect(t.value,"to be","02/03/2020,02/22/2020"),expect(filterCells(l,".selected"),"to equal",[l[8],l[27]]),expect(filterCells(l,".focused"),"to equal",[l[27]]),e.destroy(),t.value="",({dp:e,picker:a}=createDP(t,{maxNumberOfDates:3})),e.setDate("2/14/2020","4/22/2020","3/21/2020"),expect(e.dates,"to equal",[dateValue(2020,1,14),dateValue(2020,3,22),dateValue(2020,2,21)]),expect(t.value,"to be","02/14/2020,04/22/2020,03/21/2020"),e.destroy(),t.value="",({dp:e,picker:a}=createDP(t,{maxNumberOfDates:3})),e.show(),getCells(a)[1].click(),getCells(a)[40].click(),l=getCells(a),l[19].click(),expect(e.dates,"to equal",[dateValue(2020,0,27),dateValue(2020,1,7),dateValue(2020,1,14)]),expect(t.value,"to be","01/27/2020,02/07/2020,02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[1],l[12],l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),t.value="2/3/2020,2/22/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,1,3),dateValue(2020,1,22)]),expect(t.value,"to be","02/03/2020,02/22/2020"),expect(filterCells(l,".selected"),"to equal",[l[8],l[27]]),expect(filterCells(l,".focused"),"to equal",[l[27]]),e.destroy(),t.value="02/14/2020,04/22/2020,03/21/2020",({dp:e,picker:a}=createDP(t,{maxNumberOfDates:2})),expect(e.dates,"to equal",[dateValue(2020,3,22),dateValue(2020,2,21)]),expect(t.value,"to be","04/22/2020,03/21/2020"),e.destroy(),t.value=""})),it("makes the picker deselect the date when a selected date is clicked if value != 1",(function(){const{dp:e,picker:a}=createDP(t,{maxNumberOfDates:3});e.show();let l=getCells(a);l[19].click(),l[12].click(),l[19].click(),expect(e.dates,"to equal",[dateValue(2020,1,7)]),expect(t.value,"to be","02/07/2020"),expect(filterCells(l,".selected"),"to equal",[l[12]]),expect(filterCells(l,".focused"),"to equal",[l[12]]),l[12].click(),expect(e.dates,"to equal",[]),expect(t.value,"to be",""),expect(filterCells(l,".selected"),"to equal",[]),expect(filterCells(l,".focused"),"to equal",[l[19]]),e.destroy(),t.value=""})),it("makes the picker deselect the date when a selected date is clicked if value != 1",(function(){const{dp:e,picker:a}=createDP(t,{maxNumberOfDates:3}),l=getCells(a);e.setDate("2/14/2020","2/7/2020"),e.show(),e.setDate("2/14/2020"),expect(e.dates,"to equal",[dateValue(2020,1,7)]),expect(t.value,"to be","02/07/2020"),expect(filterCells(l,".selected"),"to equal",[l[12]]),expect(filterCells(l,".focused"),"to equal",[l[12]]),e.setDate("2/11/2020","2/7/2020","2/14/2020"),expect(e.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,14)]),expect(t.value,"to be","02/11/2020,02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[16],l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),e.destroy(),t.value=""})),it("setDate() replaces the selection instead of deselect/merg-ing if clear: true option is passed",(function(){const{dp:e,picker:a}=createDP(t,{maxNumberOfDates:3}),l=getCells(a);e.setDate("2/14/2020","2/7/2020"),e.show(),e.setDate("2/14/2020",{clear:!0}),expect(e.dates,"to equal",[dateValue(2020,1,14)]),expect(t.value,"to be","02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),e.setDate("2/11/2020","2/7/2020","2/14/2020",{clear:!0}),expect(e.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,7),dateValue(2020,1,14)]),expect(t.value,"to be","02/11/2020,02/07/2020,02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[16],l[12],l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),e.destroy(),t.value=""})),it("setDate() does nothing if no dates or all-invalid dates are passed",(function(){const e=new Datepicker(t,{maxNumberOfDates:3});e.setDate("2/14/2020","2/7/2020"),e.show();const a=[...e.dates];e.setDate([]),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.setDate(),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.setDate([!1,NaN],{clear:!0}),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.setDate("",null),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.destroy()})),it("setDate() clears all selected dates if no dates + clear: true option are passed",(function(){const e=new Datepicker(t,{maxNumberOfDates:3});e.setDate("2/14/2020","2/7/2020"),e.show(),e.setDate([],{clear:!0}),expect(e.dates,"to equal",[]),expect(t.value,"to be",""),e.setDate("2/14/2020","2/7/2020"),e.setDate({clear:!0}),expect(e.dates,"to equal",[]),expect(t.value,"to be",""),e.destroy()})),it("setDate() does nothing if all-invalid dates + clear: true option are passed",(function(){const e=new Datepicker(t,{maxNumberOfDates:3});e.setDate("2/14/2020","2/7/2020"),e.show();const a=[...e.dates];e.setDate([!1,NaN],{clear:!0}),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.setDate("",null,{clear:!0}),expect(e.dates,"to equal",a),expect(t.value,"to be","02/14/2020,02/07/2020"),e.destroy()})),it("does not apply deselecting behavior to update()",(function(){const{dp:e,picker:a}=createDP(t,{maxNumberOfDates:3}),l=getCells(a);e.setDate("2/14/2020","2/7/2020"),e.show(),t.value="2/14/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,1,14)]),expect(t.value,"to be","02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),t.value="2/11/2020,2/7/2020,2/14/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,7),dateValue(2020,1,14)]),expect(t.value,"to be","02/11/2020,02/07/2020,02/14/2020"),expect(filterCells(l,".selected"),"to equal",[l[16],l[12],l[19]]),expect(filterCells(l,".focused"),"to equal",[l[19]]),e.destroy(),t.value=""})),it("makes getDate() return array of dates if value != 1",(function(){const e=new Datepicker(t,{maxNumberOfDates:3});expect(e.getDate(),"to equal",[]),expect(e.getDate("yyyy-mm-dd"),"to equal",[]),e.setDate("2/11/2020","2/7/2020","2/14/2020"),expect(e.getDate(),"to equal",[new Date(2020,1,11),new Date(2020,1,7),new Date(2020,1,14)]),expect(e.getDate("yyyy-mm-dd"),"to equal",["2020-02-11","2020-02-07","2020-02-14"]),e.setDate("2/7/2020",{clear:!0}),expect(e.getDate(),"to equal",[new Date(2020,1,7)]),expect(e.getDate("d M, yyyy"),"to equal",["7 Feb, 2020"]);const a=e=>{l=e};let l;t.addEventListener("changeDate",a),e.setDate("7/4/2020","7/14/2020"),expect(l.detail.date,"to equal",e.getDate()),t.removeEventListener("changeDate",a),e.destroy(),t.value=""})),it("value 0 is considered unlimited",(function(){window.navigator.userAgent.indexOf("Edge")>-1&&this.timeout(5e3);const e=new Date(2100,0,1).getTime(),a=(t,l,s=0)=>{const c=dateUtils.stripTime(Math.floor(Math.random()*e));return t.includes(c)?a(t,l,s):(t.push(c),s<=l?a(t,l,s+1):t)},l=a([],3e3),s=new Datepicker(t,{maxNumberOfDates:0});s.setDate(l),expect(s.dates,"to equal",l),s.destroy(),t.value=""})),it("can be updated with setOptions()",(function(){const e=new Datepicker(t);e.setOptions({maxNumberOfDates:3}),e.setDate("2/11/2020","2/7/2020","2/14/2020"),expect(e.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,7),dateValue(2020,1,14)]),e.setOptions({maxNumberOfDates:1}),e.setDate("7/4/2020","4/22/2020"),expect(e.dates,"to equal",[dateValue(2020,3,22)]),expect(e.getDate(),"to be a date"),e.destroy(),t.value=""}))})),describe("dateDelimiter",(function(){it("specifies the date delemiter for the input string",(function(){const e=new Datepicker(t,{maxNumberOfDates:3,dateDelimiter:"|"});e.setDate("2/14/2020","4/22/2020"),expect(t.value,"to be","02/14/2020|04/22/2020"),t.value="2/11/2020|2/7/2020|2/14/2020",e.update(),expect(e.dates,"to equal",[dateValue(2020,1,11),dateValue(2020,1,7),dateValue(2020,1,14)]),e.destroy(),t.value=""})),it("can be updated with setOptions()",(function(){const e=new Datepicker(t,{maxNumberOfDates:3});e.setOptions({dateDelimiter:"_"}),e.setDate("2/11/2020","2/7/2020","2/14/2020"),e.setOptions({dateDelimiter:" - "}),expect(t.value,"to be","02/11/2020 - 02/07/2020 - 02/14/2020"),e.setOptions({dateDelimiter:","}),expect(t.value,"to be","02/11/2020,02/07/2020,02/14/2020"),e.destroy(),t.value=""}))}))}));
//# sourceMappingURL=/sm/df3fddd3491e1a728e257069281bae55d301ada1fab4d32021004683188fcc52.map