/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/unit/DateRangePicker.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"./_setup.js";import DateRangePicker from"../../js/DateRangePicker.js";import{parseHTML}from"../../js/lib/dom.js";import*as DP from"../../js/Datepicker.js";const Datepicker=DP.default;describe("DateRangePicker",(function(){let e,t,n;beforeEach((function(){e=parseHTML("<div><input><input></div>").firstChild,[t,n]=e.children,testContainer.appendChild(e)})),afterEach((function(){document.querySelectorAll(".datepicker").forEach((e=>{e.parentElement.removeChild(e)})),delete t.datepicker,delete n.datepicker,delete e.rangepicker,testContainer.removeChild(e)})),describe("constructor",(function(){it("attachs the created instance to the bound element",(function(){const t=new DateRangePicker(e);expect(e.rangepicker,"to be",t)})),it("configures the instance with the default values",(function(){let t=new DateRangePicker(e);expect(t.allowOneSidedRange,"to be false")})),it("creates datepicker for the inputs passing rangepicker and given options expect",(function(){const a=sinon.spy(DP,"default");let r=new DateRangePicker(e);expect(a.args,"to equal",[[t,{},r],[n,{},r]]),expect(t.datepicker,"to be a",Datepicker),expect(n.datepicker,"to be a",Datepicker),expect([t.datepicker,n.datepicker],"to equal",r.datepickers),a.resetHistory(),delete t.datepicker,delete n.datepicker,delete e.rangepicker;const i={foo:123,bar:456};r=new DateRangePicker(e,i),expect(a.args,"to equal",[[t,i,r],[n,i,r]]),a.restore()})),it("makes datepickers property read-only/immutable",(function(){const t=new DateRangePicker(e);expect((()=>{t.datepickers=[]}),"to throw a",TypeError),expect((()=>{t.datepickers[0]=null}),"to throw a",TypeError),expect((()=>{t.datepickers[2]={}}),"to throw a",TypeError)})),it("excludes inputs, allowOneSidedRange and maxNumberOfDates from options to pass Datepicker container",(function(){const a=sinon.spy(DP,"default");new DateRangePicker(e,{inputs:[t,n],allowOneSidedRange:!1,maxNumberOfDates:2,foo:123}),expect(a.args[0][1],"to equal",{foo:123}),a.restore()})),it("works with arbitrary input elements if they are provided in the inputs option",(function(){const e=document.createElement("div"),a=new DateRangePicker(e,{inputs:[t,n]});expect(e.rangepicker,"to be",a),expect(t.datepicker.rangepicker,"to be",a),expect(n.datepicker.rangepicker,"to be",a),expect([t.datepicker,n.datepicker],"to equal",a.datepickers)})),it("append datepicker elements to the container)",(function(){new DateRangePicker(e);const t=Array.from(document.body.children).filter((e=>e.matches(".datepicker")));expect(t,"to have length",2)})),it("does not add the active class to the picker elements",(function(){new DateRangePicker(e);const t=Array.from(document.querySelectorAll(".datepicker"));expect(t.filter((e=>e.classList.contains("active"))),"to be empty")})),it("does nothing but creating an instance if number of inputs < 2",(function(){e.removeChild(n);let a=new DateRangePicker(e);expect(e,"not to have property","rangepicker"),expect(a,"not to have properties",["inputs","datepickers"]),expect(t,"not to have property","datepicker"),expect(document.querySelectorAll(".datepicker").length,"to be",0);const r=document.createElement("div");a=new DateRangePicker(r,{inputs:[t]}),expect(r,"not to have property","rangepicker"),expect(t,"not to have property","datepicker"),expect(document.querySelectorAll(".datepicker").length,"to be",0)}))})),describe("destroy()",(function(){let a,r,i;beforeEach((function(){a=new DateRangePicker(e),r=sinon.spy(t.datepicker,"destroy"),i=sinon.spy(n.datepicker,"destroy")})),afterEach((function(){r.restore(),i.restore()})),it("calls destroy() of each datepickers",(function(){a.destroy(),expect(r.called,"to be true"),expect(i.called,"to be true")})),it("removes the instance from the bound element",(function(){a.destroy(),expect(Object.prototype.hasOwnProperty.call(e,"rangepicker"),"to be false")}))})),describe("dates property",(function(){it("contains the array of the inputs' selected dates",(function(){const t=new DateRangePicker(e);expect(t.dates,"to equal",[void 0,void 0]);const n=new Date(2020,3,20).setHours(0,0,0,0),a=new Date(2020,3,22).setHours(0,0,0,0);t.datepickers[0].dates=[n],t.datepickers[1].dates=[a],expect(t.dates,"to equal",[n,a])}))})),describe("setOptions()",(function(){it("updates allowOneSidedRange but ignores inputs if they are in the given options",(function(){const a=document.createElement("input"),r=new DateRangePicker(e);r.setOptions({allowOneSidedRange:!0,inputs:[a,t]}),expect(r.allowOneSidedRange,"to be true"),expect(r.inputs,"to equal",[t,n])})),it("calls each datepicker's setOptions() with given options except inputs, allowOneSidedRange and maxNumberOfDates",(function(){const t=new DateRangePicker(e),n=sinon.stub(t.datepickers[0],"setOptions").callsFake((()=>{})),a=sinon.stub(t.datepickers[1],"setOptions").callsFake((()=>{}));t.setOptions({inputs:[],allowOneSidedRange:!0,maxNumberOfDates:2,foo:123,bar:456}),expect(n.args,"to equal",[[{foo:123,bar:456}]]),expect(a.args,"to equal",[[{foo:123,bar:456}]])}))}))}));
//# sourceMappingURL=/sm/a7f5d06e880719e0bf6f9c5dc491e51f79b1eccddd2ffb7522a6f4a5af84f0b9.map