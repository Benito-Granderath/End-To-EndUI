/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/flowbite-datepicker@1.3.0/test/unit/lib/event.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import"../_setup.js";describe("lib/evnet",(function(){let e,t,n,i,c,o;before((function(){t=sinon.spy(EventTarget.prototype,"addEventListener"),n=sinon.spy(EventTarget.prototype,"removeEventListener");const r=global.WeakMap;return global.WeakMap=function(...t){return e=new r(...t)},import("../../../js/lib/event.js").then((e=>{global.WeakMap=r,i=e.registerListeners,c=e.unregisterListeners,o=e.findElementInEventPath}))})),after((function(){t.restore(),n.restore()})),afterEach((function(){t.resetHistory(),n.resetHistory()})),describe("registerListeners()",(function(){let n;before((function(){n=document.createElement("input"),testContainer.appendChild(n)})),after((function(){testContainer.removeChild(n)})),it("registers event listeres with key object calling addEventListener()",(function(){const c={},o=sinon.spy(),r=sinon.spy(),s=[[document,"click",o],[n,"keydown",r,{capture:!1}],[n,"mouseenter",()=>{},!0]];i(c,s),expect(e.get(c),"to equal",s),expect(t.args,"to equal",s.map((e=>e.slice(1)))),testContainer.click(),expect(o.called,"to be true"),simulant.fire(n,"keydown",{key:"enter"}),expect(r.called,"to be true"),s.forEach((e=>{EventTarget.prototype.removeEventListener.call(...e)})),e.delete(c)})),it("appends listeners if registration for key object already exists",(function(){const c={},o=[[document,"click",()=>{}]],r=[[n,"keydown",()=>{},{capture:!1}],[n,"mouseenter",()=>{},!0]];e.set(c,o),i(c,r),expect(o.length,"to be",3),expect(e.get(c),"to equal",o),expect(t.args,"to equal",r.map((e=>e.slice(1)))),r.forEach((e=>{EventTarget.prototype.removeEventListener.call(...e)})),e.delete(c)}))})),describe("unregisterListeners()",(function(){let t;before((function(){t=document.createElement("input"),testContainer.appendChild(t)})),after((function(){testContainer.removeChild(t)})),it("unregisters all event listeres for key object calling removeEventListener()",(function(){const i={},o=sinon.spy(),r=sinon.spy(),s=[[document,"click",o],[t,"keydown",r,{capture:!1}],[t,"mouseenter",()=>{},!0]];s.forEach((e=>{EventTarget.prototype.addEventListener.call(...e)})),e.set(i,s),c(i),expect(e.get(i),"to be undefined"),expect(n.args,"to equal",s.map((e=>e.slice(1)))),testContainer.click(),expect(o.called,"to be false"),simulant.fire(t,"keydown",{key:"enter"}),expect(r.called,"to be false")}))})),describe("findElementInEventPath()",(function(){let e,t,n;before((function(){n=document.createElement("input"),t=document.createElement("div"),t.className="control",t.appendChild(n),e=document.createElement("div"),e.className="field",e.appendChild(t),testContainer.appendChild(e)})),after((function(){testContainer.removeChild(e)})),it("returns the first element in event's path that matches given selector",(function(){const i=n=>{expect(o(n,".control"),"to be",t),expect(o(n,".field"),"to be",e),expect(o(n,"div"),"to be",t)};document.addEventListener("click",i),simulant.fire(n,"click"),document.removeEventListener("click",i)})),it("returns undefined if no matched element is in event's path",(function(){const e=e=>{expect(o(e,".foo"),"to be undefined")};document.addEventListener("click",e),simulant.fire(n,"click"),document.removeEventListener("click",e)})),it("stops searching when it reaches event's currentTarget",(function(){const e=e=>{expect(o(e,".control"),"to be",t),expect(o(e,".field"),"to be undefined")};t.addEventListener("click",e),simulant.fire(n,"click"),t.removeEventListener("click",e)})),it("function can be used to evaluate the condition instead of css selector",(function(){const i=n=>{expect(o(n,(n=>[e,t].includes(n))),"to be",t),expect(o(n,(t=>t===e)),"to be",e),expect(o(n,(e=>"DIV"===e.tagName)),"to be",t)};document.addEventListener("click",i),simulant.fire(n,"click"),document.removeEventListener("click",i)}))}))}));
//# sourceMappingURL=/sm/411b622b45480d8bd89a02a2dd27076414d6b288d2cbcf0e22bcbeb11c79a0cb.map